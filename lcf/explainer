Hi folks,

I've made a number of changes to the model:

1. Innovation premium and Cost v gas:
    Innovation premium ignores Negawatts, while the cost v gas includes them, and because they're so cheap this figure then comes out negative.
    In our discussion we thought innovation premium was the more useful figure.
    nb I get £219m in my scenario that matches Excel sc3 most closely, rather than £150m. This is to do with a couple of Excel quirks altering the actual amount of generation which I'm happy to explain on skype if you like.

2. Notes/sources:
    The model now accepts technology data with notes/sources as well as without.
    I've tried to follow the Excel layout, so there is a column with a reference number next to each data point, and then a description below of what the number corresponds to in terms of notes, source, link, local link.
    It's still possible to upload using the old template though if you don't want to add notes.

3. Ironing out another excel quirk:
    The Excel model was calculating the number of projects available in a way that misconstrued the price distribution of projects and also meant that all unsuccessful projects could continually bid into future rounds.
    The main reason this was problematic was because it meant the cap on how much capacity could be deployed in a year was being overidden.
    But I realised that for some technologies this is actually useful/realistic, namely nuclear, which could be unsuccessful for several years and yet still considered in future years.
    So there's an option to turn this quirk completely off or on, or have it on just for nuclear.

4. Interpolation:
    It's now possible to add a csv file with missing technology values and the model will fill them in. It's still necessary for 2020 and 2030 values to be included. If intermediate values are included they will be used too.
    eg
    2020     0
    2030    10

    will produce
    2020     0
    2021     1
    2022     2
    2023     3
    2024     4
    2025     5
    2026     6
    2027     7
    2028     8
    2029     9
    2030    10

    while
    2020     0
    2022     9
    2030    10

    will produce
    2020     0
    2021     4.5
    2022     9
    2023     9.125
    2024     9.25
    2025     9.375
    2026     9.5
    2027     9.625
    2028     9.75
    2029     9.875
    2030    10


    It doesn't make a difference to the model whether years with no values still listed in the csv file or not.

    eg
    E	OFW	2020	True	71.3353908668731	103.034791021672	114.074615384615	0.42	1.9		832
    E	OFW	2025	True	70.2083010835913	97.4463041795666	104.382307692308	0.49
    E	OFW	2030	True	65.1448298261547	91.847304242529	94.69	0.49	1.9		832

    will be treated the same as:
    E	OFW	2020	True	71.3353908668731	103.034791021672	114.074615384615	0.42	1.9		832
    E	OFW	2021	True
    E	OFW	2022	True
    E	OFW	2023	True
    E	OFW	2024	True
    E	OFW	2025	True	70.2083010835913	97.4463041795666	104.382307692308	0.49	1.9		832
    E	OFW	2026	True
    E	OFW	2027	True
    E	OFW	2028	True
    E	OFW	2029	True
    E	OFW	2030	True	65.1448298261547	91.847304242529	94.69	0.49	1.90000000000001		832

5. Policies:
    Based on our discussion, I've created the option to allow polices to subtract costs off technologies rather than multiply a discount.
    I've also removed the ability of a policy to have any effect on exogenous things like wholesale and gas prices.

6. Error messages:
    I've added a bunch of error messages at various points that will hopefully be more helpful than the ones generated by Django.
